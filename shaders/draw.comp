#version 450
#include shaders/shared.glsl

layout(local_size_x = 32,  local_size_y = 32) in;

layout(rgba8, binding = 0) writeonly uniform image2D frame;
layout(rgba8i, binding = 1) readonly uniform iimage2D worldTex;


void main() {
    uvec2 resolution = imageSize(frame);
    uvec2 pixel = gl_GlobalInvocationID.xy;

    if (pixel.x >= resolution.x || pixel.y >= resolution.y)
        return;

    ivec4 pixelS = imageLoad(worldTex, ivec2(pixel) / PIXEL_SIZE);
    int colorRnd = pixelS.w;

    vec4 baseColor = vec4(GetMaterialInfo(pixelS.r).BaseColor) / 255. + rand(vec2(colorRnd)) * 0.2321;

    vec4 finalColor = vec4(baseColor);
    ivec2 delta = (ivec2(pixel) - BrushPos) / PIXEL_SIZE;
    if (Brush(delta * PIXEL_SIZE, BrushSize)) {
        finalColor = mix(finalColor, vec4(1., 1., 1., 1.), 0.5);
    }

    finalColor = pow(finalColor, vec4(2.2));

    imageStore(frame, ivec2(pixel), finalColor);
}

