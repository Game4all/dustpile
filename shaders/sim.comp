#version 450
#include shaders/shared.glsl

layout(local_size_x = 32,  local_size_y = 32) in;

layout(rgba8i, binding = 0) uniform iimage2D worldTex;

void main() {
    uvec2 resolution = imageSize(worldTex) / PIXEL_SIZE;
    uvec2 pixel = gl_GlobalInvocationID.xy;

    if (pixel.x >= resolution.x || pixel.y >= resolution.y)
        return;

    ivec4 cell = imageLoad(worldTex, ivec2(pixel));

    //todo: use a better algorithm
    if (cell.r != 0) {
        ivec4 bottomCell = imageLoad(worldTex, ivec2(pixel) - ivec2(0, 1));
        if  (bottomCell.r == 0) {
            imageStore(worldTex, ivec2(pixel), ivec4(0, 0, 0, 0));
            imageStore(worldTex, ivec2(pixel) - ivec2(0, 1), cell);
        }
    }
}